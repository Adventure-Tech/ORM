# GitHub Actions Workflow generated with Ghygen
# Original configuration: https://ghygen.hi-folks.dev?code=ab0b435cad6eaeec42bf39b0bb35957c
name: Run tests
on:
  pull_request:
    branches:
      - develop
      - main
jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["8.2"]
        node-version: ["18.x"]
        dependency-stability: ["prefer-none"]

    name: execute tests (P${{ matrix.php-versions }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}})

    services:
      postgres:
        image: postgis/postgis:15-3.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orm_testing
        # map the 'external' 55432 port with the 'internal' 5432
        ports:
          - 55432:5432
        # set health checks to wait until postgresql database has started (it takes some seconds to start)
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug
      - name: Install Dependencies
        run: |
          composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_PASSWORD }}"
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Update Dependencies with latest stable
        if: matrix.dependency-stability == 'prefer-stable'
        run: composer update --prefer-stable
      - name: Update Dependencies with lowest stable
        if: matrix.dependency-stability == 'prefer-lowest'
        run: composer update --prefer-stable --prefer-lowest

      - name: Show dir
        run: pwd
      - name: PHP Version
        run: php --version

      - name: Execute tests (Unit and Feature tests) via PestPHP
        env:
          XDEBUG_MODE: coverage
        run: vendor/bin/pest --coverage --min=100
